/*
Problem: 
DESCRIPTION:
#Sorting on planet Twisted-3-7

There is a planet... in a galaxy far far away. It is exactly like our planet, but it has one difference: #The values of the digits 3 and 7 are twisted. Our 3 means 7 on the planet Twisted-3-7. And 7 means 3.

Your task is to create a method, that can sort an array the way it would be sorted on Twisted-3-7.

test cases: 
[1,2,3,4,5,6,7,8,9] -> [1,2,7,4,5,6,3,8,9]
[12,13,14] -> [12,14,13]
[9,2,4,7,3] -> [2,7,4,3,9]

/*
steps: 
1 - i need to eval each value in a sorted array (ascending order) 
> sort the given array in ascending order 
> do a for loop on the sortedArr 

>> inide the sortedArr: 
2-  i need to evaluate the number using a for loop 
num = sortedArr[i] 

Conditionals: 
- if the current number does not contain a 3 or 7
-- push it into the output array 

- if the current number contains a 3 or 7 
-- put a blank space into the output array  

How to eval current number: 
- turn the current number into a string 
numStr = num.toString() ----> // 13 --> "13"
numSplit = numStr.split("") ----> // "1", "3"

- evaluate if the string contains a 3 or 7 
let searchVal = "37"; 
if(searchVal.includes(numSplit)) ----> if this evaluates true. Stop and add the number 

-- pull out that number and put it into an array of only 3 and 7's 

3. now i have an array of 3 and 7's 
-- i need to sort the array of only 3 and 7's in descending order 
HOW?  


4. i need to insert the 3 or 7 value back into the output Array for each of the blank spots 
- looping through the output array, if the value is blank
-- set it = to the 37 array value 
-- once the value is set, need to move onto the next output Array value AND next 37 array value 


- return the output Array 

expected:[ -24, -14, 6, 6, 8, 75, 14, 20, 26, 34, 30, 48, 50, 50, 62, 64, 13 ] 
correct: [ -24, -14, 6, 6, 8, 14, 13, 20, 26, 75, 48, 50, 50, 62, 64, 30, 34 ]
         [-24, -14, 6, 6, 8, 75, 14, 20, 26, 34, 30, 48, 50, 50, 62, 64, 13]

*/

function twisted(arr) {
  let outputArr = [];
  let twistedArr = [];
  let sortOrig = arr; 
  let sortedArr = sortedOriginal(sortOrig);

  console.log("sortedArr: ", sortedArr);

  for (let i = 0; i < sortedArr.length; i++) {
    let num = sortedArr[i];
    let numStr = num.toString();
    let numSplit = numStr.split("");

    if (numTester(numSplit) === true) {
      twistedArr.push(num);
      outputArr.push(" ");
    } else {
      outputArr.push(num);
    }
  }

  console.log("twistedArr: ", twistedArr);

  const sorted_list = twistedArr.sort(function (a, b) {
    return b - a;
  });

  console.log("descSort: ", sorted_list);

  let pointerIndex = 0;

  if (sorted_list.length === 1) {
    if (sorted_list[pointerIndex] > outputArr[0]) {
      outputArr.push(sorted_list[pointerIndex]);
    } else {
      outputArr.unshift(sorted_list[pointerIndex]);
    }
    outputArr.splice(outputArr.indexOf(" "), 1);
  } else {
    for (let i = 0; i < outputArr.length; i++) {
      if (outputArr[i] === " ") {
        outputArr[i] = sorted_list[pointerIndex++];
      }
    }
  }
  return outputArr;
}

function sortedOriginal(arr) {
  let sortOrig = arr;
  sortOrig.sort(function (a, b) {
    return a - b;
  });
  return sortOrig;
}

function numTester(numSplit) {
  let searchVal = "37";
  for (let i = 0; i < numSplit.length; i++) {
    if (searchVal.includes(numSplit[i])) {
      return true;
    }
  }
  return false;
}

